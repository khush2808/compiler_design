
;; Function add (add, funcdef_no=0, decl_uid=3176, cgraph_uid=1, symbol_order=0)


Analyzing function body size: add/0

IPA function summary for add/0
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:3.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:

int add (int a, int b)
{
  int D.3190;
  int _3;

  <bb 2> :
  _3 = a_1(D) + b_2(D);

  <bb 3> :
<L0>:
  return _3;

}



;; Function subtract (subtract, funcdef_no=1, decl_uid=3180, cgraph_uid=2, symbol_order=1)


Analyzing function body size: subtract/1

IPA function summary for subtract/1
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:3.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:

int subtract (int a, int b)
{
  int D.3192;
  int _3;

  <bb 2> :
  _3 = a_1(D) - b_2(D);

  <bb 3> :
<L0>:
  return _3;

}



;; Function factorial (factorial, funcdef_no=2, decl_uid=3183, cgraph_uid=3, symbol_order=2)


Analyzing function body size: factorial/2

IPA function summary for factorial/2
  global time:     18.000000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:6.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:
    factorial/2 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 5 stack: 0

int factorial (int num)
{
  int D.3196;
  int _1;
  int _2;
  int _3;
  int _8;
  int _9;

  <bb 2> :
  if (num_5(D) <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = num_5(D) + -1;
  _2 = factorial (_1);
  _8 = num_5(D) * _2;

  <bb 5> :
  # _3 = PHI <_9(3), _8(4)>
<L2>:
  return _3;

}



;; Function main (main, funcdef_no=3, decl_uid=3185, cgraph_uid=4, symbol_order=3)


Analyzing function body size: main/3

IPA function summary for main/3
  global time:     96.000000
  self size:       34
  global size:     34
  min size:       0
  self stack:      0
  global stack:    0
    size:7.000000, time:8.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:
    printf/5 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
    factorial/2 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 5 stack: 0
    printf/5 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
    subtract/1 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0
    printf/5 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
    add/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0
    scanf/4 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13

int main ()
{
  int b;
  int a;
  int D.3198;
  int b.0_1;
  int a.1_2;
  int _3;
  int b.2_4;
  int a.3_5;
  int _6;
  int a.4_7;
  int _8;
  int a.5_9;
  int _20;

  <bb 2> :
  scanf ("Enter two numbers: %d %d", &a, &b);
  b.0_1 = b;
  a.1_2 = a;
  _3 = add (a.1_2, b.0_1);
  printf ("Addition: %d", _3);
  b.2_4 = b;
  a.3_5 = a;
  _6 = subtract (a.3_5, b.2_4);
  printf ("Subtraction: %d", _6);
  a.4_7 = a;
  _8 = factorial (a.4_7);
  a.5_9 = a;
  printf ("Factorial of %d: %d", a.5_9, _8);
  a ={v} {CLOBBER(eol)};
  b ={v} {CLOBBER(eol)};
  _20 = 0;

  <bb 3> :
<L0>:
  return _20;

}


